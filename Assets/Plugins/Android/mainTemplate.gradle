// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven(){url 'http://nexus.gululu.com/repository/gululu/'}
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven(){url 'http://nexus.gululu.com/repository/gululu/'}
        flatDir {
            dirs 'libs'
        }
    }
}

ext {
    apkOutputPath = "/Users/ezshine/hankout"
    BUILD_COOPERATION_INFO = "GULULU"
}

apply plugin: 'com.android.application'

dependencies {
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.flurry.android:analytics:11.3.0@aar'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.google.dagger:dagger:2.9"
    implementation 'com.android.support:support-v4:28.0.0'
    annotationProcessor "com.google.dagger:dagger-compiler:2.9"
    implementation 'com.bowhead.sheldon.alarm:alarm:1.0.1@aar'
    implementation 'com.bowhead.sheldon.log:log:1.0.0@aar'
    implementation 'com.bowhead.sheldon.sdk:sdk:1.0.0@aar'
    implementation 'com.bowhead.sheldon.utils:utils:1.0.0@aar'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
**DEPS**}

android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'

        manifestPlaceholders = [COOPERATION_INFO: BUILD_COOPERATION_INFO]
    }


    // flavorDimensions "app"
    // productFlavors{
    //     XiNuo{
    //         dimension "app"
    //         manifestPlaceholders = [COOPERATION_INFO: "GULULU"]
    //     }

    //     PingAn{
    //         dimension "app"
    //         manifestPlaceholders = [COOPERATION_INFO: "PINGAN"]
    //     }
    // }

    // variantFilter{ variant ->
    //     if(variant.buildType.name.equals('release')) {
    //         variant.getFlavors().each() { flavor ->
    //             if (!BUILD_FLAVOR.toLowerCase().contains(flavor.name.toLowerCase())) {
    //                 variant.setIgnore(true)
    //             }
    //         }
    //     }

    // }

 //    android.applicationVariants.all { variant ->
	// 	variant.outputs.all {
			
	// 		variant.getPackageApplication().outputDirectory = new File(apkOutputPath)

	// 		def date = new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"));
 //            outputFileName = "Hank_${variant.name}_v${variant.versionName}_${date}.apk"
	// 	}
	// }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress '.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**
    }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
// **BUILT_APK_LOCATION**
}**SPLITS_VERSION_CODE****SOURCE_BUILD_SETUP**
